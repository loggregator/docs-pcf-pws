---
title: Configure Permissions for TAS Developer Portal (beta)
owner: TAS Developer Portal
---

By default, all catalog entities in the TAS Portal are visible to and
modifiable by all TAS Portal users. Organization that wish to limit access to
Software Catalog entities can configure the TAS Portal permission framework.

## <a id="overview"></a> Overview

The permission framework enables TAS Portal operators to enforce policies that
limit access to certain parts of TAS Portal.

Currently, the only configurable permissions are for Software Catalog entities.
Through TAS Portal and entity-level configuration, it is possible to grant
users either global access or individual access to Software Catalog entities.

## <a id="enabling"></a> Enabling the Permission Framework

1. In Tanzu Operations Manager, on the TAS for VMs tile, click the **Settings**
tab.

1. On the left panel, click **TAS Developer Portal**.

   ![alt-text=""](./images/TAS-portal-settings-tab.png)

1. To activate the permission framework, add the following yaml to the
**Backstage configuration** text area:
 
    ```yaml
      permission:
        enabled: true
    ```

1. To apply the settings, re-deploy TAS Portal, using the procedure described
in [Deploy TAS Developer Portal (beta) with TAS for
VMs](/appsman-services/tas-portal/deploy-tas-portal.html).

1. Open TAS Portal, and observe that Software Catalog entities are no longer
visible.

## <a id="admins"></a> Assigning Admin Users

Users configured with admin permissions can view and modify all Software
Catalog entities. To configure TAS Portal admins, use the following procedure:

1. In Tanzu Operations Manager, on the TAS for VMs tile, click the **Settings**
tab.

1. On the left panel, click **TAS Developer Portal**.

   ![alt-text=""](./images/TAS-portal-settings-tab.png)

1. To activate the permission framework, add the following yaml to the
**Backstage configuration** text area:
 
     ```yaml
       permission:
        enabled: true
        adminRefs:
        - user:default/USERNAME
     ```
     where `USERNAME` is the desired admin user's username. For example, enter
     `user:default/tas-portal-admin` for a user whose username is
     `tas-portal-admin`.

1. To apply the settings, re-deploy TAS Portal, using the procedure described
in [Deploy TAS Developer Portal (beta) with TAS for
VMs](/appsman-services/tas-portal/deploy-tas-portal.html).

1. Open TAS Portal, log in as the admin user configured above, and observe that
all Software Catalog entities are visible.

## <a id="ownership"></a> Assigning Entity Ownership

Users will always have permission to view and modify entities they own in the
Software Catalog. In order for this to function correctly, the Software Catalog
entity will need to have a correctly-configured owner. To set this
configuration, add the following to the Catalog Entity's configuration file:

```yaml
spec:
  owner: user:default/USERNAME
```

where `USERNAME` is the desired owning user's username.

Here is an example of what a catalog entity configuration might look like with a
correctly-configured owning user:

```yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: tas-test-app
  description: Sample Tanzu Application
  tags:
    - cloud-foundry
spec:
  type: service
  lifecycle: experimental
  owner: user:default/tas-owning-user
```

For more information about configuring Software Catalog entities see
[Descriptor Format of Catalog
Entities](https://backstage.io/docs/features/software-catalog/descriptor-format/).

## <a id="user-permissions"></a> Granting User Permissions

It is also possible grant non-admin, non-owning users permission to view or
modify Software Catalog entities. To set this configuration, add the following
to the Catalog Entity's configuration file:

```yaml
annotations:
  'backstage.tanzu.vmware.com/user.default.USERNAME': 'PERMISSIONS'
```

where `USERNAME` is the desired owning user's username and `PERMISSIONS` is a
comma-delimited list of permissions for that user for the configured entity.

Here is an example of what a catalog entity configuration might look like with
configured user permissions:

```yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: tas-test-app
  description: Sample Tanzu Application
  tags:
    - cloud-foundry
  annotations:
    'backstage.tanzu.vmware.com/user.default.tas-test-user': 'catalog.entities.read,catalog.entities.update'
spec:
  type: service
  lifecycle: experimental
  owner: user:default/tas-owning-user
```

Currently, the available permissions are:
- `catalog.entity.read`: Grants permission to view the Software Catalog entity.
- `catalog.entity.update`: Grants permission to modify the Software Catalog
entity.
- `catalog.entity.delete`: Grants permission to unregister the entity from the
Software Catalog.

For more information about configuring Software Catalog entities see
[Descriptor Format of Catalog
Entities](https://backstage.io/docs/features/software-catalog/descriptor-format/).
